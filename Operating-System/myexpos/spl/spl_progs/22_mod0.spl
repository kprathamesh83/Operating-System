//resource manager module

alias functionNum R1;
alias currentPID R2;

if(functionNum == 8)then
     while([TERMINAL_STATUS_TABLE + 0] == 1)do
            [PROCESS_TABLE + currentPID * 16 + 4] = WAIT_TERMINAL;
            multipush(R1, R2);
            call CONTEXT_SWITCH;
            multipop(R1, R2);
     endwhile;       
     [TERMINAL_STATUS_TABLE + 0] = 1;
     [TERMINAL_STATUS_TABLE + 1] = currentPID;
     breakpoint;
     return;
endif;
if(functionNum == 9)then
     if(currentPID != [TERMINAL_STATUS_TABLE + 1])then
           R0 = -1;
           return;
     endif;
     [TERMINAL_STATUS_TABLE + 0] = 0;
     R0 = 0;
     alias i R1;
     i = 1;
     while(i<MAX_PROC_NUM)do
	  if([PROCESS_TABLE + i*16 + 4] == WAIT_TERMINAL)then
	        [PROCESS_TABLE + i*16 + 4]=READY;
	  endif;
	  i = i + 1;
     endwhile;
     breakpoint;
     return;
endif;
if(functionNum == ACQUIRE_DISK)then
     print("disk acquired");
     while([DISK_STATUS_TABLE + 0] == 1)do
          [PROCESS_TABLE + currentPID*16 + 4] = WAIT_DISK;      
          backup;
          call CONTEXT_SWITCH;
          restore;
     endwhile;
     [DISK_STATUS_TABLE+0]=1;
     [DISK_STATUS_TABLE+4]=currentPID;
     return;
endif;     

if(functionNum == ACQUIRE_SEMAPHORE)then
    alias currPid R2;
    alias i R4;
    i = 0;
    R0 = -1;
    while (i<MAX_SEM_COUNT) do
        if([SEMAPHORE_TABLE + i*4 + 1] == 0) then
            [SEMAPHORE_TABLE + i*4 + 1] = 1;
            [SEMAPHORE_TABLE + i*4 + 0] = -1;
            R0 = i;
            return;
        endif;
        i = i + 1;
    endwhile;
    return;
endif;

if(functionNum == RELEASE_SEMAPHORE) then
    alias currPid R3;
    alias sem_table_idx R2;
    if([SEMAPHORE_TABLE + sem_table_idx*4] == currPid) then 
        [SEMAPHORE_TABLE + sem_table_idx*4] = -1;
        alias i R4;
        i = 0;
        while (i<16) do
            if([PROCESS_TABLE + i*16 + 4] == WAIT_SEMAPHORE && [PROCESS_TABLE + i*6 + 5]== sem_table_idx) then
                [PROCESS_TABLE + i*16 + 4] = READY;
            endif;
            i = i + 1;
        endwhile;
    endif;
    [SEMAPHORE_TABLE + sem_table_idx*4 + 1] = [SEMAPHORE_TABLE + sem_table_idx*4 + 1] - 1;
    return;
endif;

return;     
