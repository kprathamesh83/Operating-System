//wait, signal, getpid, getppid


alias userSP R1;
userSP = SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 - 1;

alias syscallNum R3;
syscallNum = [[PTBR + 2*((userSP-5)/512)]*512 + ((userSP-5)%512)];


if(syscallNum == 13)then
	alias PID R4;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = syscallNum;
	PID = [[PTBR+2*(userSP-4)/512]*512 + ((userSP-4)%512)];
	if((PID<0) || (PID>15) || (PID == [SYSTEM_STATUS_TABLE+1]) || (PROCESS_TABLE + 16*PID + 4) == TERMINATED)then
		[[PTBR+2*((userSP-1)/512)]*512 + ((userSP-1)%512)] = -1;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
		SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		ireturn;
	endif;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4] = WAIT_PROCESS;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] = PID;
	backup;
	call CONTEXT_SWITCH;
	restore;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
	[[PTBR + 2*((userSP - 1)/512)]*512 + ((userSP - 1)%512)]  = 0;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
    ireturn;
endif;

if(syscallNum == 14)then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = syscallNum;
	alias i R5;
	i=0;
	while(i<16)do
		if([PROCESS_TABLE + i*16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + i*16 + 5] == [SYSTEM_STATUS_TABLE + 1])then
    		[PROCESS_TABLE + i*16 + 4] = READY; 
    	endif;	
    	i=i+1;
    endwhile;	
    [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
    [[PTBR+2*((userSP-1)/512)]*512 + ((userSP-1)%512)] = 0;
     SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
    ireturn;
endif;

if(syscallNum == 11) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = syscallNum;
    [[PTBR+2*((userSP - 1)/512)]*512 + ((userSP - 1)%512)] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 1];
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
    ireturn;
endif;

if(syscallNum == 12) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = syscallNum;
    [[PTBR+2*((userSP - 1)/512)]*512 + ((userSP - 1)%512)] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 2];
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
    ireturn;
endif;

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;
