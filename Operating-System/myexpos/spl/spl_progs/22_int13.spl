//Semget and Semrelease

alias syscallNum R3;
alias userSP R4;
userSP = SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]  =  SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512-1;

syscallNum = [[PTBR + 2*((userSP-5)/512)]*512 + (userSP-5)%512];

if(syscallNum == 17)then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 17;	
	alias i R6;
	alias x R7;
	alias freeEntry R8;
	freeEntry = -1;
	
	i = 496;
	while(i<512) do
		if([[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+i] == -1) then
			freeEntry = i;
			break;		
		endif;
		i = i + 2;
	endwhile;

	if(freeEntry == -1) then	
		[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512] = -1;	
		SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
		ireturn;
	endif;
	
	multipush(R3,R4,R5,R6,R7,R8);
	R1 = ACQUIRE_SEMAPHORE;
	R2 = [SYSTEM_STATUS_TABLE+1];
	call RESOURCE_MANAGER;	
	multipop(R3,R4,R5,R6,R7,R8);
	
	if(R0 == -1)then
		[[PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512] = -2;
		SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
		ireturn;
	else
		[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+i] = 1;
		[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+i+1] = R0;

		x = (freeEntry-496)/2;
		[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512] = x;	
		SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;	
		ireturn;
	endif;
endif;	

if (syscallNum == 18) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 18;
	alias semID R7;
	semID = [[PTBR + 2 * ((userSP - 4) / 512)] * 512 + (userSP - 4) % 512];
	alias user_area_page R8;
	user_area_page = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11];

	if((semID<0) || (semID>7) || ([user_area_page*512 + 496 + 2*semID] != 1)) then
		[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512] = -1;
		SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;	//reset the mode
		ireturn;
	endif;
    backup;
	R1 = RELEASE_SEMAPHORE;
	R2 = [user_area_page*512+496 + semID*2 + 1];
	R3 = [SYSTEM_STATUS_TABLE+1]; 
	call RESOURCE_MANAGER;
	restore;
	
	[user_area_page*512 + 496 + 2*semID] = -1;
	[[PTBR + 2 * ((userSP - 1) / 512)] * 512 + (userSP - 1) % 512] = 0;
	SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];		
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;	

	ireturn;
endif;

ireturn;	

